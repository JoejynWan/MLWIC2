% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train.R
\name{train}
\alias{train}
\title{Train a machine learning model to classify images}
\usage{
train(
  path_prefix = paste0(getwd(), "/images"),
  data_info = paste0(getwd(), "/image_labels.csv"),
  model_dir = paste0(getwd(), "/MLWIC2_helper_files"),
  python_loc = "/anaconda2/bin/",
  os = "Mac",
  num_gpus = 2,
  num_classes = 59,
  delimiter = ",",
  architecture = "resnet",
  depth = "18",
  batch_size = 128,
  log_dir = "species_model",
  log_dir_train = "MLWIC2_train_output",
  retrain = TRUE,
  retrain_from = "species_model",
  num_epochs = 55,
  num_cores = 4,
  randomize = TRUE,
  max_to_keep = 5,
  print_cmd = FALSE,
  shiny = FALSE
)
}
\arguments{
\item{path_prefix}{Absolute path to location of the images on your computer}

\item{data_info}{csv with file names for each photo (absolute path to file). This file must have no headers (column names).
column 1 must be the file name of each image including the extention (i.e., .jpg). Column 2
must be a number corresponding to the species. Give each species (or group of species) a
number identifying it. The first species must be 0, the next species 1, and so on.}

\item{model_dir}{Absolute path to the location where you stored the trained_model folder
that you downloaded from github.}

\item{python_loc}{The location of python on your machine.}

\item{os}{the operating system you are using. If you are using windows, set this to
"Windows", otherwise leave as default}

\item{num_gpus}{The number of GPUs available. If you are using a CPU, leave this as default.}

\item{num_classes}{The number of classes (species or groups of species) in your model.}

\item{delimiter}{this will be a `,` for a csv.}

\item{architecture}{the architecture of the deep neural network (DNN). Resnet-18 is the default.
Other options are c("alexnet", "densenet", "googlenet", "nin", "vgg")}

\item{depth}{the number of layers in the DNN. If you are using resnet, the options are c(18, 34, 50, 101, 152).
If you are using densenet, the options are c(121, 161, 169, 201).
If you are an architecture other than resnet or densenet, the number of layers will be automatically set.}

\item{batch_size}{the number of images simultaneously passed to the model for training.
It must be a multiple of 64. Smaller numbers will train models that are more accurate, but it will
take longer to train. The default is 128.}

\item{log_dir_train}{directory where you will store the model information.
This will be called when you what you specify in the \code{log_dir} option of the
\code{classify} function. You will want to use unique names if you are training
multiple models on your computer; otherwise they will be over-written.}

\item{retrain}{If TRUE, the model you train will be a retraining of the model presented in
the Tabak et al. MEE paper. If FALSE, you are starting training from scratch. Retraining will be faster
but training from scratch will be more flexible.}

\item{retrain_from}{name of the directory from which you want to retrain the model.}

\item{num_epochs}{the number of epochs you want to use for training. The default is 55 and this is
recommended for training a full model. But if you need to start and stop training, you may want to use
a smaller number at times.}

\item{num_cores}{The number of cores you want to use. You can find the number on your computer using
parallel::detectCores()}

\item{randomize}{If TRUE, this will randomize the order in which images are passed to training}

\item{max_to_keep}{maximum number of snapshot files to keep. These are the snapshots that are taken of the
current version of the model at the end of each epoch.}

\item{print_cmd}{print the system command instead of running the function. This is for development.}
}
\description{
\code{train} allows users to train their own machine learning model using images
that have been manually classified. We recommend having at least 500 images per species,
but accuracies will be higher with > 10,000 images. This model will take a very long
time to run. We recommend using a GPU if possible. In the \code{data_info} csv, you must
have two columns with no headers. Column 1 must be the file name of the image. Column 2
must be a number corresponding to the species. Give each species (or group of species) a
number identifying it. You can use the \code{make_input} function for help making this csv.
The first species must be 0, the next species 1, and so on. If this is your first time using
this function, you should see additional documentation at https://github.com/mikeyEcology/MLWIC2 .
This function uses absolute paths, but if you are unfamilliar with this
process, you can put all of your images, the image label csv ("data_info") and the trained_model folder that you
downloaded following the directions at https://github.com/mikeyEcology/MLWIC2 into one directory on
your computer. Then set your working directory to this location and the function will find the
absolute paths for you.
}
